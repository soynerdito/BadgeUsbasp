Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
ispTransmit         0x2               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xd9c
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068       0x52 usbdrv/usbdrv.o
                0x0000000000000068                usbDescriptorConfiguration
                0x000000000000007a                usbDescriptorDevice
                0x000000000000008c                usbDescriptorStringDevice
                0x000000000000009a                usbDescriptorStringVendor
                0x00000000000000b6                usbDescriptorString0
                0x00000000000000ba                . = ALIGN (0x2)
                0x00000000000000ba                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ba        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ba                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ba                __ctors_start = .
 *(.ctors)
                0x00000000000000ba                __ctors_end = .
                0x00000000000000ba                __dtors_start = .
 *(.dtors)
                0x00000000000000ba                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ba        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x00000000000000ba                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ba        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000c6       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000c6                __do_copy_data
 .init4         0x00000000000000dc       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000dc                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ec        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000f4        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
                0x00000000000000f4                __vector_22
                0x00000000000000f4                __vector_24
                0x00000000000000f4                __vector_12
                0x00000000000000f4                __bad_interrupt
                0x00000000000000f4                __vector_6
                0x00000000000000f4                __vector_3
                0x00000000000000f4                __vector_23
                0x00000000000000f4                __vector_25
                0x00000000000000f4                __vector_11
                0x00000000000000f4                __vector_13
                0x00000000000000f4                __vector_17
                0x00000000000000f4                __vector_19
                0x00000000000000f4                __vector_7
                0x00000000000000f4                __vector_5
                0x00000000000000f4                __vector_4
                0x00000000000000f4                __vector_9
                0x00000000000000f4                __vector_2
                0x00000000000000f4                __vector_21
                0x00000000000000f4                __vector_15
                0x00000000000000f4                __vector_8
                0x00000000000000f4                __vector_14
                0x00000000000000f4                __vector_10
                0x00000000000000f4                __vector_16
                0x00000000000000f4                __vector_18
                0x00000000000000f4                __vector_20
 .text          0x00000000000000f8      0x236 usbdrv/usbdrv.o
                0x00000000000000f8                usbPoll
                0x0000000000000320                usbInit
 .text          0x000000000000032e      0x25a usbdrv/usbdrvasm.o
                0x000000000000032e                usbCrc16
                0x0000000000000358                usbCrc16Append
                0x0000000000000360                __vector_1
 .text          0x0000000000000588        0x0 usbdrv/oddebug.o
 .text          0x0000000000000588      0x39c isp.o
                0x0000000000000588                ispTransmit_hw
                0x0000000000000594                spiHWenable
                0x000000000000059a                ispSetSCKOption
                0x00000000000005b2                ispDelay
                0x00000000000005be                ispTransmit_sw
                0x0000000000000606                ispConnect
                0x0000000000000630                ispDisconnect
                0x0000000000000640                ispEnterProgrammingMode
                0x00000000000006ae                ispReadFlash
                0x0000000000000716                ispWriteFlash
                0x00000000000007d2                ispFlushPage
                0x0000000000000880                ispReadEEPROM
                0x00000000000008ca                ispWriteEEPROM
 .text          0x0000000000000924       0x16 clock.o
                0x0000000000000924                clockWait
 .text          0x000000000000093a      0x3f8 main.o
                0x000000000000093a                usbFunctionSetup
                0x0000000000000b78                usbFunctionRead
                0x0000000000000c0a                usbFunctionWrite
 .text          0x0000000000000d32        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000d32        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000d32        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000d32                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000d32       0x66 main.o
                0x0000000000000d32                main
 .text.libgcc.mul
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000d98                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000d98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x0000000000000d98                exit
                0x0000000000000d98                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000d98        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000d9c                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000d9c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x2 usbdrv/usbdrv.o
                0x0000000000800101                usbTxLen
 .data          0x0000000000800102        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800102        0x0 usbdrv/oddebug.o
 .data          0x0000000000800102        0x0 isp.o
 .data          0x0000000000800102        0x0 clock.o
 .data          0x0000000000800102        0x0 main.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x41
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800102        0x1 usbdrv/usbdrv.o
 .bss           0x0000000000800103        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800103        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800103        0x0 isp.o
 .bss           0x0000000000800103        0x0 clock.o
 .bss           0x0000000000800103       0x14 main.o
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800117        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800117       0x2a usbdrv/usbdrv.o
                0x0000000000800117                usbTxBuf
                0x0000000000800122                usbDeviceAddr
                0x0000000000800123                usbRxToken
                0x0000000000800124                usbInputBufOffset
                0x0000000000800125                usbMsgPtr
                0x0000000000800127                usbRxLen
                0x0000000000800128                usbNewDeviceAddr
                0x0000000000800129                usbCurrentTok
                0x000000000080012a                usbConfiguration
                0x000000000080012b                usbRxBuf
 COMMON         0x0000000000800141        0x2 isp.o
                0x0000000000800141                ispTransmit
                0x0000000000800143                PROVIDE (__bss_end, .)
                0x0000000000000d9c                __data_load_start = LOADADDR (.data)
                0x0000000000000d9e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800143        0x0
                0x0000000000800143                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800143                PROVIDE (__noinit_end, .)
                0x0000000000800143                _end = .
                0x0000000000800143                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 usbdrv/usbdrv.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 usbdrv/oddebug.o
 .comment       0x0000000000000000       0x12 isp.o
 .comment       0x0000000000000000       0x12 clock.o
 .comment       0x0000000000000000       0x12 main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
